
public class Quadtree {
	
	// the starting node
	Node root;
	
	// max depth that the tree can be
	int max_depth = 10;
	
	// I was thinking that this has a way of knowing if a place is free, !free, !Checked
	// if we are to do this we need to send a point every step and not just at the 
	// time of a hit
	boolean complete = true;
	
	// 
	public Quadtree(int width, int height){
		root = new Node(width, height);
	}
	
	public void set_point(int x, int y){
		set_point(0, root, x, y);
	}
	
	private void set_point(int depth, Node node, int x, int y){
		if (depth > max_depth) return;
		
		set_point(depth+1, node.split(x, y), x, y);
	}
	
	//
	private class Node {
		Node UL = null;
		Node UR = null;
		Node DL = null;
		Node DR = null;
		
		Node parent = null;
		
		int depth = 0;
		
		int x1 = 0;// top left point
		int y1 = 0;
		int x2 = 0;// bottom right point
		int y2 = 0;

		public Node split(int x, int y){
			
			
			if (x < (x1+x2)/2){
				
			} else {
				
			}
		}
		
		public Node(int x1, int y1, int x2, int y2){
			this.x1 = x1;
			this.y1 = y1;
			this.x2 = x2;
			this.y2 = y2;
		}
		public Node(Node parent, int width, int height){
			
		}
		
	}
}
